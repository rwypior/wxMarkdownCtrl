#ifndef __MarkdownEditorMainWindow__
#define __MarkdownEditorMainWindow__

/**
@file
Subclass of MainWindow, which is generated by wxFormBuilder.
*/

#include "markdowneditor.h"

#include <wx/timer.h>

#include <limits>

class MarkdownEditorMainWindow : public MainWindow
{
public:
	MarkdownEditorMainWindow(wxWindow* parent);

private:
	typedef void(MarkdownEditorMainWindow::*CommandHandler)(const wxCommandEvent&);

private:
	bool isCursorAtLineStart() const;
	bool isCursorAtEnd() const;
	void insertAndSelectText(const wxString& text, size_t begin = 0, int length = std::numeric_limits<int>::max());
	void insertAndJumpToNextLine(const wxString& text);
	void insertNewLineIfNeeded();

private:
	void evtCommand(const wxCommandEvent& event);

	void handlerNew(const wxCommandEvent& event);
	void handlerOpen(const wxCommandEvent& event);
	void handlerSave(const wxCommandEvent& event);
	void handlerSaveAs(const wxCommandEvent& event);
	void handlerExit(const wxCommandEvent& event);

	void handlerUndo(const wxCommandEvent& event);
	void handlerRedo(const wxCommandEvent& event);
	void handlerCut(const wxCommandEvent& event);
	void handlerCopy(const wxCommandEvent& event);
	void handlerPaste(const wxCommandEvent& event);

	void handlerAbout(const wxCommandEvent& event);

	void handlerPara(const wxCommandEvent& event);
	void handlerH1(const wxCommandEvent& event);
	void handlerH2(const wxCommandEvent& event);
	void handlerH3(const wxCommandEvent& event);
	void handlerH4(const wxCommandEvent& event);
	void handlerH5(const wxCommandEvent& event);
	void handlerH6(const wxCommandEvent& event);
	void handlerLine(const wxCommandEvent& event);
	void handlerQuote(const wxCommandEvent& event);
	void handlerCodeBlock(const wxCommandEvent& event);
	void handlerCode(const wxCommandEvent& event);
	void handlerLink(const wxCommandEvent& event);
	void handlerImage(const wxCommandEvent& event);

	void handlerTextChanged(const wxCommandEvent& event);
	void handlerTimerMarkdown(const wxTimerEvent& event);

private:
	wxTimer timer;
};

#endif
